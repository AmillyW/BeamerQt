#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Development goals
\end_layout

\begin_layout Subsection
Create zoom out frames
\end_layout

\begin_layout Standard
https://stackoverflow.com/questions/57713795/zoom-in-and-out-in-widget
\end_layout

\begin_layout Subsection
Multi-tab documents
\end_layout

\begin_layout Subsection
Create Text Edit with Widgets support
\end_layout

\begin_layout Standard
https://forum.qt.io/topic/61098/widgets-inside-a-text-editor
\end_layout

\begin_layout Subsection
Extract the formatting and contents from the Text Edit and generate LaTeX
 equivalent
\end_layout

\begin_layout Subsection
Interoperate information from xml-like objects and gui widgets
\end_layout

\begin_layout Subsection
Generate Zip files with folder structure
\end_layout

\begin_layout Standard
The system will have a temporary folder to work with.
 When saving, it will compress the folder and save it at the destination.
 When opening, it will decompress in a temporal folder.
\end_layout

\begin_layout Standard
External files will be stored in the zip file.
 The system will keep track of the original file and, if lost, generate
 a warning and use only the local one.
\end_layout

\begin_layout Section
Current state - Notes
\end_layout

\begin_layout Itemize
Reading/Saving slides vs Internal object
\end_layout

\begin_deeper
\begin_layout Itemize
The current prototype handles the reading/saving steps inside the GUI elements.
 
\end_layout

\begin_layout Itemize
I need to make it in an object that handles this process independently,
 so that it can be invoked when we need to export to PDF without displaying
 the GUI elements in the process.
\end_layout

\begin_layout Itemize
Each GUI element should have the corresponding handler.
\end_layout

\begin_layout Itemize
New modules should have the pair, handler/GUI.
\end_layout

\begin_layout Itemize

\series bold
Solve this issue before adding more features
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Itemize
Reimplement the Slide bar, using QListWidget:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

from PyQt6 import QtWidgets
\end_layout

\begin_layout Plain Layout

from PyQt6 import QtCore
\end_layout

\begin_layout Plain Layout

from PyQt6.QtWidgets import (QListWidget)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class ThumbListWidget(QListWidget):
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def __init__(self, parent=None):
\end_layout

\begin_layout Plain Layout

        super(ThumbListWidget, self).__init__(parent)
\end_layout

\begin_layout Plain Layout

        self.setIconSize(QtCore.QSize(200, 200))
\end_layout

\begin_layout Plain Layout

        self.setDragDropMode(QtWidgets.QAbstractItemView.DragDropMode.InternalMove)
\end_layout

\begin_layout Plain Layout

        
\end_layout

\begin_layout Plain Layout

        self.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.ExtendedSele
ction)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def dragEnterEvent(self, event):
\end_layout

\begin_layout Plain Layout

        if event.mimeData().hasUrls():
\end_layout

\begin_layout Plain Layout

            event.accept()
\end_layout

\begin_layout Plain Layout

        else:
\end_layout

\begin_layout Plain Layout

            super(ThumbListWidget, self).dragEnterEvent(event)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def dragMoveEvent(self, event):
\end_layout

\begin_layout Plain Layout

        if event.mimeData().hasUrls():
\end_layout

\begin_layout Plain Layout

            event.setDropAction(QtCore.Qt.MoveAction)
\end_layout

\begin_layout Plain Layout

            event.accept()
\end_layout

\begin_layout Plain Layout

        else:
\end_layout

\begin_layout Plain Layout

            super(ThumbListWidget, self).dragMoveEvent(event)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def dropEvent(self, event):
\end_layout

\begin_layout Plain Layout

        if event.mimeData().hasUrls():
\end_layout

\begin_layout Plain Layout

            event.setDropAction(QtCore.Qt.MoveAction)
\end_layout

\begin_layout Plain Layout

            event.accept()
\end_layout

\begin_layout Plain Layout

            links = []
\end_layout

\begin_layout Plain Layout

            for url in event.mimeData().urls():
\end_layout

\begin_layout Plain Layout

                links.append(str(url.toLocalFile()))
\end_layout

\begin_layout Plain Layout

        else:
\end_layout

\begin_layout Plain Layout

            # event.setDropAction(QtCore.Qt.MoveAction)
\end_layout

\begin_layout Plain Layout

            super(ThumbListWidget, self).dropEvent(event)
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
